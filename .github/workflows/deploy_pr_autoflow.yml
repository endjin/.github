name: deploy_pr_autoflow
on: 
  # push:
  #   branches:
  #   - master
  workflow_dispatch:
    inputs:
      config_repo:
        default: live
        required: true

jobs:
  deploy_pr_autoflow:
    runs-on: ubuntu-latest
    name: Deploy PR Autoflow workflows to target repos
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      # Run GitVersion so we get a meaningful version number to use in any PRs we need to raise
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.402'
      - name: Install GitVersion
        run: |
          dotnet tool install -g GitVersion.Tool --version 5.2.4
          echo "::add-path::/github/home/.dotnet/tools"    
      - name: Run GitVersion
        id: run_gitversion
        run: |
          pwsh -noprofile -c '(dotnet-gitversion | ConvertFrom-Json).psobject.properties | % { echo ("::set-output name={0}::{1}" -f $_.name, $_.value) }'
      
      - name: Install GH CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository -u https://cli.github.com/packages
          sudo apt install gh
        shell: bash
      
      - name: Run sync-pr-autoflow-to-repos.ps1
        run: |
          Install-Module powershell-yaml -Force -Scope CurrentUser -Repository PSGallery

          git config --global user.email "dependjinbot@endjin.com"
          git config --global user.name "dependjinbot"
          $credentialHelperPath = Resolve-Path ./git-credential-helper.sh
          git config --global credential.helper "/bin/bash $($credentialHelperPath.Path)"
          
          gci env: | fl | out-string | write-host



          if ([string]::IsNullOrEmpty($env:CONFIG_REPO)) {
            #$env:INPUT_CONFIG_REPO = 'live'
            exit 1
          }
          $repoPath = "repos/$($env:CONFIG_REPO)"

          ./codeops-scripts/sync-pr-autoflow-to-repos.ps1 -ConfigDirectory  `
                                          -AddOverwriteSettings `
                                          -ConfigureGitVersion `
                                          -ConfigureDependabotV2
        shell: pwsh
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPENDJINBOT_PRIVATE_KEY }}
          GITHUB_APP_ID: ${{ secrets.DEPENDJINBOT_APP_ID }}
          GITVERSION_NUGETVER: ${{ steps.run_gitversion.outputs.nuGetVersionV2 }}
          CONFIG_REPO: ${{ github.event.inputs.config_repo }}
