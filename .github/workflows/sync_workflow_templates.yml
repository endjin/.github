name: deploy_workflow_templates
on: 
  # push:
  #   branches:
  #   - master
  workflow_dispatch:
    inputs:
      config_repo:
        default: live
        required: true

jobs:
  deploy_workflow_templates:
    runs-on: ubuntu-latest
    name: Deploys github workflow templates to target orgs
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Run GitVersion so we get a meaningful version number to use in any PRs we need to raise
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.402'
      - name: Install GitVersion
        run: |
          dotnet tool install -g GitVersion.Tool --version 5.6.6
          echo "/github/home/.dotnet/tools" >> $GITHUB_PATH
      - name: Run GitVersion
        id: run_gitversion
        run: |
          pwsh -noprofile -c 'dotnet-gitversion /diag'
          pwsh -noprofile -c '(dotnet-gitversion | ConvertFrom-Json).psobject.properties | % { echo ("::set-output name={0}::{1}" -f $_.name, $_.value) }'

      - name: Run sync-workflow-templates.ps1
        run: |
          Install-Module powershell-yaml -Force -Scope CurrentUser -Repository PSGallery

          git config --global user.email "dependjinbot@endjin.com"
          git config --global user.name "dependjinbot"
          $credentialHelperPath = Resolve-Path ./git-credential-helper.sh
          git config --global credential.helper "/bin/bash $($credentialHelperPath.Path)"
          
          # process and validate the supplied config repo to use - default to 'test' if blank for some reason
          if ([string]::IsNullOrEmpty($env:CONFIG_REPO)) {
            $env:CONFIG_REPO = 'test'
          }
          $repoPath = "repos/$($env:CONFIG_REPO)"
          if (!(Test-Path $repoPath)) {
            Write-Error "Could not find config repo path: $repoPath"
            exit 1
          }
          ./codeops-scripts/sync-workflow-templates.ps1 -ConfigDirectory $repoPath
        shell: pwsh
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPENDJINBOT_PRIVATE_KEY }}
          GITHUB_APP_ID: ${{ secrets.DEPENDJINBOT_APP_ID }}
          GITVERSION_NUGETVER: ${{ steps.run_gitversion.outputs.nuGetVersionV2 }}
          CONFIG_REPO: ${{ github.event.inputs.config_repo }}
